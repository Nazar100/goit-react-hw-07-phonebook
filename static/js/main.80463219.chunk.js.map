{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Form/ContactsForm.module.css","redux/actions.js","redux/operations.js","components/Form/ContactsForm.jsx","redux/selectors.js","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","a","get","data","name","number","contact","post","then","catch","error","contactId","delete","ContactsForm","checkExistingContacts","useState","setName","setNumber","useDispatch","handleInput","target","value","validateFrom","alert","onSubmit","e","preventDefault","operations","className","s","container","type","onChange","getFilter","state","contacts","filter","getVisibleContacts","items","getContacts","normalizedFilter","toLowerCase","includes","Contacts","useSelector","useEffect","length","map","id","button","data-key","onClick","deleteContact","empty","Filter","input","App","isExistingContact","find","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","payload","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80463219.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contacts_name__25ers\",\"number\":\"Contacts_number__3xFN5\",\"button\":\"Contacts_button__3OGpI\",\"empty\":\"Contacts_empty__1zP8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsForm_container__so_Rq\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactsRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactsSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactsError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import axios from \"axios\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from \"./actions\";\n\naxios.defaults.baseURL = \"http://localhost:4040\";\n\nconst fetchContacts = () => async (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get(\"/contacts\");\n\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nconst addContact = (name, number) => (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n  dispatch(addContactRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => {\n      dispatch(addContactSuccess(data));\n    })\n    .catch((error) => dispatch(addContactError(error)));\n};\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport operations from \"../../redux/operations\";\n// import contactsActions from \"../../redux/actions\";\n\nimport s from \"./ContactsForm.module.css\";\n\nfunction ContactsForm({ checkExistingContacts }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleInput = ({ target }) => {\n    const { name, value } = target;\n    if (name === \"name\") {\n      setName(value);\n    } else {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const isValidFrom = validateFrom();\n    if (!isValidFrom) return;\n\n    dispatch(operations.addContact(name, number));\n\n    setNumber(\"\");\n    setName(\"\");\n  };\n\n  const validateFrom = () => {\n    if (!name || !number) {\n      alert(\"Some input is empty\");\n      return false;\n    }\n\n    return checkExistingContacts(name);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={s.container}>\n        <label>\n          Enter the name\n          <input type=\"text\" value={name} name=\"name\" onChange={handleInput} />\n        </label>\n        <label>\n          Enter the number\n          <input\n            type=\"tel\"\n            value={number}\n            name=\"number\"\n            onChange={handleInput}\n          />\n        </label>\n      </div>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nexport default ContactsForm;\n","export const getContacts = (state) => {\n  return state.contacts.items;\n};\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return (\n    contacts &&\n    contacts.filter(({ name }) => {\n      return name?.toLowerCase().includes(normalizedFilter);\n    })\n  );\n};\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport operations from \"../../redux/operations\";\nimport { getVisibleContacts } from \"../../redux/selectors\";\n\nimport s from \"./Contacts.module.css\";\n\nexport default function Contacts() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const deleteContact = (id) => dispatch(operations.deleteContact(id));\n\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\n\n  return (\n    <ul>\n      {contacts &&\n        contacts.length > 0 &&\n        contacts.map(({ name, number, id }) => {\n          return (\n            <li key={id}>\n              <span className={s.name}>Name: {name}</span>\n              <span className={s.number}>Number: {number}</span>\n              <button\n                className={s.button}\n                data-key={id}\n                onClick={() => deleteContact(id)}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      {contacts && contacts.length === 0 && (\n        <li className={s.empty}>List is Empty</li>\n      )}\n    </ul>\n  );\n}\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/selectors\";\nimport { changeFilter } from \"../../redux/actions\";\nimport operations from \"../../redux/operations\";\n\nimport s from \"./Filter.module.css\";\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label>\n      Filter\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={(e) => {\n          return dispatch(changeFilter(e.target.value));\n        }}\n      />\n    </label>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport React from \"react\";\nimport \"./App.css\";\nimport ContactsForm from \"./components/Form/ContactsForm\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport Filter from \"./components/Filter/Filter\";\nimport { getVisibleContacts } from \"./redux/selectors\";\n\nfunction App() {\n  const contacts = useSelector(getVisibleContacts);\n\n  const checkExistingContacts = (name) => {\n    const isExistingContact =\n      contacts &&\n      !!contacts.find((contact) => {\n        return contact.name === name;\n      });\n\n    isExistingContact && alert(`${name} is already in your contacts`);\n\n    return !isExistingContact;\n  };\n\n  return (\n    <div className=\"container\">\n      <div>\n        <h1>Phonebook</h1>\n        <ContactsForm checkExistingContacts={checkExistingContacts} />\n        <Filter />\n      </div>\n      <div>\n        <h2>Contacts</h2>\n        <Contacts />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n} from \"./actions\";\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const contactsPersistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n// export const persistor = persistStore(store);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}